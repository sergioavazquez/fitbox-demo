{"version":3,"sources":["elements/notifications/error.module.scss","elements/navigation/navigation.module.scss","static/rick-sprite.png","static/morty-sprite.png","store/configureStore.js","elements/notifications/error.js","static/logo.svg","elements/navigation/navigation.js","elements/spriteAnimator/spriteAnimator.js","elements/SinglePageApp/singlePageApp.js","routes/index.js","constants/index.js","App.js","utils/index.js","serviceWorker.js","index.js","middleware/logger.js","reducers/index.js","store/configureStore.prod.js","actions/index.js"],"names":["module","exports","require","ErrorScreen","error","className","styles","mainError","code","errorMsg","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","cx","cy","r","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","Navigation","config","nav","SpriteAnimator","sprite","fps","size","frameSize","nFrames","spacer","controller","useState","spriteLine","setSpriteLine","currentFrame","setCurrentFrame","frameDelay","Math","floor","timeouts","useEffect","stopped","window","requestAnimationFrame","t","setTimeout","push","framePosX","w","framePosY","h","flip","sopped","fw","spriteStyles","opacity","zIndex","width","height","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","transform","style","renderAnimationFrame","defaultProps","SinglePageApp","moving","setMoving","useSelector","state","deviceInfoReducer","containerRef","useRef","handleClickEvent","e","defaultPrevented","dir","clientX","document","addEventListener","removeEventListener","bw","ratio","fitWidth","container","rick","morty","onClick","preventDefault","stopPropagation","Routes","exact","path","render","component","to","App","updateScreenSize","fn","interval","timeout","leading","leadExecuted","timer","lead","args","context","postponed","clearTimeout","debounce","bind","initApp","updateDeviceInfo","newState","updated","newHeight","innerHeight","newWidth","innerWidth","appRender","Component","connect","systemReducer","isConfigReady","dispatch","ownProps","configFile","type","GlobalActions","payload","data","info","Boolean","location","hostname","match","store","configureStore","rootElement","getElementById","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","logger","next","action","console","group","result","log","getState","groupEnd","systemInitState","deviceInfoInitState","landscape","rootReducer","combineReducers","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","compose","createStore","SYSTEM_CONFIG_LOADED","SYSTEM_CONFIG_FAILED","SYSTEM_ERROR","RESET_SYSTEM_ERROR","UPDATE_DEVICE_INFO"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,IAAM,0B,mBCDxBD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCCzCD,EAAOC,QAAUC,EAAQ,K,4PCEdC,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,yBAAKC,UAAWC,IAAOC,WACrB,4BAAKH,EAAMI,MACX,4BAAKJ,EAAMK,Y,yCCPjB,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,EAEJ,IAAMC,cAAc,IAAK,CACvBC,KAAM,WACL,IAAMD,cAAc,OAAQ,CAC7BE,EAAG,m6EACD,IAAMF,cAAc,SAAU,CAChCG,GAAI,MACJC,GAAI,MACJC,EAAG,OACD,IAAML,cAAc,OAAQ,CAC9BE,EAAG,kBAGD,EAAU,SAAiBI,GAC7B,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQnB,EAAyBgB,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAMN,cAAc,MAAOxB,EAAS,CACzCkC,QAAS,kBACTC,IAAKJ,GACJE,GAAQD,EAAQ,IAAMR,cAAc,QAAS,KAAMQ,GAAS,KAAMT,IAGnEa,EAAa,IAAMC,YAAW,SAAUJ,EAAOE,GACjD,OAAO,IAAMX,cAAc,EAASxB,EAAS,CAC3C+B,OAAQI,GACPF,OCvBUK,GDyBA,IClCI,SAAC,GAAe,EAAbC,OAEpB,OACE,yBAAK5C,UAAWC,IAAO4C,KACrB,kBAAC,EAAD,S,QCNAC,EAAiB,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,OAAQC,EAAmE,EAAnEA,IAAKC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,OAAQpD,EAA4B,EAA5BA,UAAWqD,EAAiB,EAAjBA,WAAiB,EAC/DC,mBAAS,GADsD,mBAC5FC,EAD4F,KAChFC,EADgF,OAE3DF,mBAAS,GAFkD,mBAE5FG,EAF4F,KAE9EC,EAF8E,KAG7FC,EAAaC,KAAKC,MAAM,IAAOb,GAE/Bc,EAAW,GAEjBC,qBAAU,WAQJV,IAAeA,EAAWW,SAC5BR,EAAc,GACdS,OAAOC,uBATW,WAClB,IAAMC,EAAIC,YAAW,WAEnBV,EADkBD,EAAe,EAAIN,EAAUM,EAAe,EAAI,KAEjEE,GACHG,EAASO,KAAKF,QAMdX,EAAc,GACdE,EAAgB,MAEjB,CAACD,EAAcN,EAASW,EAAUH,EAAYN,IAuBjD,OArB6B,WAE3B,IAAMiB,EAAYb,EAAeP,EAAUqB,GAAMd,EAAe,GAAKL,EAC/DoB,EAAYjB,EAAaL,EAAUuB,GAAKlB,EAAa,GAAKH,EAE1DsB,EAAOrB,IAAeA,EAAWsB,QAAUtB,EAAWuB,IAAM,EAAI,EAChEC,EAAe,CACnBC,QAAS,EACTC,OAAQ,EACRC,MAAM,GAAD,OAAK9B,EAAUqB,EAAf,MACLU,OAAO,GAAD,OAAK/B,EAAUuB,EAAf,MACNS,gBAAgB,OAAD,OAASnC,EAAT,KACfoC,iBAAkB,YAClBC,eAAe,GAAD,OAAKnC,EAAKsB,EAAV,cAAiBtB,EAAKwB,EAAtB,MACdY,mBAAmB,GAAD,QAAMf,EAAN,eAAsBE,EAAtB,MAClBc,UAAU,UAAD,OAAYZ,EAAZ,MAGX,OAAO,yBAAKa,MAAOV,EAAc7E,UAAWA,IAGvCwF,IAGT1C,EAAe2C,aAAe,CAC5BzC,IAAK,EACLI,OAAQ,EACRF,UAAW,CAAEuB,EAAG,IAAKF,EAAG,KACxBtB,KAAM,CAAEwB,EAAG,IAAKF,EAAG,KACnBpB,QAAS,EACTnD,UAAW,kBAGE8C,Q,kCCOA4C,G,MAzDO,SAAC,GAAgB,IAAd9C,EAAa,EAAbA,OAAa,EACRU,mBAAS,MADD,mBAC7BqC,EAD6B,KACrBC,EADqB,KAE9BX,EAASY,aAAY,SAAAC,GAAK,OAAIA,EAAMC,kBAAkBd,UACtDD,EAAQa,aAAY,SAAAC,GAAK,OAAIA,EAAMC,kBAAkBf,SAErDgB,EAAeC,mBAErBlC,qBAAU,WACR,IAAMmC,EAAmB,SAACC,GACxB,IAAKA,EAAEC,iBAAkB,CACvB,IAAMC,EAAMF,EAAEG,SAAWtB,EAAQ,EAAI,KAAO,KAC5CY,EAAUS,KAId,OADAE,SAASC,iBAAiB,QAASN,GAC3B,WACNK,SAASE,oBAAoB,QAASP,OAI1C,IAMM7C,EAAa,WACjB,MAAO,CACLW,SAAoB,IAAX2B,EACTf,GAAe,OAAXe,EACJe,GAAe,OAAXf,IAWR,OACE,yBAAK3F,UAAU,MAAMuF,MAAO,CAAEN,OAAO,GAAD,OAAKA,EAAL,MAAiBD,MAAM,GAAD,OAAKA,EAAL,QACxD,kBAAC,EAAD,CAAYpC,OAAQA,IACpB,yBAAKJ,IAAKwD,EAAchG,UAAU,aAChC,kBAAC,IAAD,CAAQ2G,MAAO,GAAI1D,KAAM,CAAEwB,EAAG,IAAKF,EAAG,KAAOqC,UAAQ,EAACC,UAAWb,GAC/D,0BAAMhG,UAAU,QAAhB,aACA,kBAAC,EAAD,CAAgB+C,OAAQ+D,IAAM9G,UAAU,OAAOqD,WAAYA,MAC3D,kBAAC,EAAD,CAAgBN,OAAQgE,IAAO/G,UAAU,QAAQqD,WAAYA,MAC7D,yBAAKrD,WAZa,IAAX2F,EAFF,OAEE,UAFF,OAEE,YADE,QACF,OAAgDA,GAYrBqB,QA7BvB,SAACb,GAClBA,EAAEc,iBACFd,EAAEe,kBACFtB,GAAU,KA2BF,yBAAK5F,UAAU,iBCxCZmH,EAbA,SAAC,GAAgB,IAAdvE,EAAa,EAAbA,OAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,CAAe1E,OAAQA,OAE3D,kBAAC,IAAD,CAAOyE,KCJc,QDIOE,UAAW,kBAAO,kBAAC,EAAD,CAAaxH,MAAO,CAAEI,KAAM,IAAKC,SAAU,wBACzF,kBAAC,IAAD,CAAUoH,GCLW,aCAvBC,E,YACJ,WAAYnF,GAAQ,IAAD,8BACjB,4CAAMA,KACDoF,iBCOT,SAAkBC,EAAIC,GAA6B,IAC7CC,EAD4C,gEAAJ,GAAZC,EAAgB,EAAhBA,QAE5BC,GAAe,EACbC,EAA4B,kBAAbJ,EAAwBA,EAAW,IAClDK,EAA0B,mBAAZH,GAAwBA,EAC5C,OAAO,WAAc,IAAD,uBAATI,EAAS,yBAATA,EAAS,gBAClB,IAAMC,EAAU,EACVC,EAAY,WAChBP,EAAU,KACNI,EACFF,GAAe,EAEfJ,EAAG1G,MAAMkH,EAASD,IAGtBG,aAAaR,GACbA,EAAUzD,WAAWgE,EAAWJ,GAC5BC,IAASF,IACXA,GAAe,EACfJ,EAAG1G,MAAMkH,EAASD,KD1BII,CAAS,EAAKZ,iBAAiBa,KAAtB,gBAAkC,IAFlD,E,kFAOjBC,EADoBtH,KAAKoB,MAAjBkG,WAERtH,KAAKwG,mBAELzD,OAAOuC,iBAAiB,SAAUtF,KAAKwG,kBAAkB,K,6CAIzDzD,OAAOwC,oBAAoB,SAAUvF,KAAKwG,kBAAkB,K,yCAG1C,IAAD,EAC2BxG,KAAKoB,MAAzC2C,EADS,EACTA,OAAQD,EADC,EACDA,MAAOyD,EADN,EACMA,iBACnBC,EAAW,CAAEC,SAAS,GAEpBC,EAAY3E,OAAO4E,YACnBC,EAAW7E,OAAO8E,WAEpBD,IAAa9D,GAAS4D,IAAc3D,IACtCyD,EAAQ,OAAaE,EACrBF,EAAQ,MAAYI,EACpBJ,EAAQ,SAAc,GAGpBA,EAASC,iBACJD,EAASC,QAChBF,EAAiBC,M,+BAIX,IAEJM,EAFG,EACuB9H,KAAKoB,MAA3BM,EADD,EACCA,OAAQ1C,EADT,EACSA,UAYhB,OARE8I,EADE9I,EAAUC,KACC,kBAAC,EAAD,CAAaJ,MAAOG,IAE5B0C,EAGSuE,EAAO,CAAEvE,WAFT,2CAKT,yBAAK5C,UAAU,OAAOgJ,O,GAlDfC,aA8DlB,IAceC,eAtBf,SAAyBpD,GAAQ,IAAD,EACeA,EAAMqD,cAA3CC,EADsB,EACtBA,cAAelJ,EADO,EACPA,UACvB,MAAO,CACLkJ,gBACAxG,OAJ4B,EACIA,OAIhC1C,gBAGuB,SAACmJ,EAAUC,EAAUxD,GAC9C,MAAO,CAEL0C,QAAS,SAAUe,GAEjBF,EAAS,CAAEG,KAAMC,IAAoCC,QAAS,CAAE9G,OADjD,CAAE+G,KAAM,UAIzBlB,iBAAkB,SAACmB,GACjBP,EAAS,CAAEG,KAAMC,IAAkCC,QAASE,QAKnDV,CAA6CzB,GExExCoC,QACW,cAA7B5F,OAAO6F,SAASC,UAEe,UAA7B9F,OAAO6F,SAASC,UAEhB9F,OAAO6F,SAASC,SAASC,MACvB,2D,YCTAC,E,MAAQC,KACRC,EAAc5D,SAAS6D,eAAe,QAE5CC,IAAS/C,OACP,kBAAC,IAAD,CAAU2C,MAAOA,GACf,kBAAC,EAAD,OAEAE,GDmHE,kBAAmBG,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,0DE7HJC,EARA,SAAAX,GAAK,OAAI,SAAAY,GAAI,OAAI,SAAAC,GAC9BC,QAAQC,MAAMF,EAAOtB,MACrBuB,QAAQnB,KAAK,cAAekB,GAC5B,IAAIG,EAASJ,EAAKC,GAGlB,OAFAC,QAAQG,IAAI,aAAcjB,EAAMkB,YAChCJ,QAAQK,WACDH,K,eCFHI,EAAkB,CACtBjC,eAAe,EACflJ,UAAW,CACTC,KAAM,KACNC,SAAU,MAEZwC,OAAQ,MAyCV,IAAM0I,EAAsB,CAC1BrG,OAAQ,KACRD,MAAO,KACPuG,WAAW,GAmBb,IAKeC,EALKC,YAAgB,CAClCtC,cA7DF,WAAyD,IAAlCrD,EAAiC,uDAAzBuF,EAAiBP,EAAQ,uCACtD,OAAQA,EAAOtB,MACb,KAAKC,IACH,OAAO,eACF3D,EADL,CAEEsD,eAAe,EACfxG,OAAQkI,EAAOpB,QAAQ9G,SAE3B,KAAK6G,IACH,OAAO,eACF3D,EADL,CAEEsD,eAAe,EACflJ,UAAW,CACTC,KAAM,IACNC,SAAU,yBAGhB,KAAKqJ,IACH,OAAO,eACF3D,EADL,CAEE5F,UAAW4K,EAAOpB,UAEtB,KAAKD,IACH,OAAO,eACF3D,EADL,CAEE5F,UAAW,CACTC,KAAM,KACNC,SAAU,QAGhB,QACE,OAAO,eACF0F,KA8BTC,kBAlBF,WAAiE,IAAtCD,EAAqC,uDAA7BwF,EAAqBR,EAAQ,uCAC9D,OAAQA,EAAOtB,MACb,KAAKC,IACH,OAAO,eACF3D,EADL,CAEEb,OAAQ6F,EAAOpB,QAAQzE,OACvBD,MAAO8F,EAAOpB,QAAQ1E,MACtBuG,UAAYT,EAAOpB,QAAQ1E,MAAQ8F,EAAOpB,QAAQzE,SAEtD,QACE,OAAO,eACFa,OChEI,SAASoE,EAAewB,GACrC,IAAMC,EAAc,CAACC,EAAkBC,KAEjCC,EAAY,CADSC,IAAe,WAAf,EAAmBJ,IAExCK,EAAoBC,IAAO,WAAP,EAAWH,GAErC,OADcI,YAAYV,EAAaE,EAAgBM,GATzD,yC,+BCCA,0KAAO,IAAMG,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAe,eACfC,EAAqB,qBACrBC,EAAqB,uB","file":"static/js/main.c1bc78d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainError\":\"error_mainError__30vGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navigation_nav__3cyfR\"};","module.exports = __webpack_public_path__ + \"static/media/rick-sprite.30c52267.png\";","module.exports = __webpack_public_path__ + \"static/media/morty-sprite.685431ef.png\";","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./configureStore.prod')\n} else {\n  module.exports = require('./configureStore.dev')\n}\n","import React from 'react';\nimport styles from './error.module.scss';\n\nexport const ErrorScreen = ({ error }) => {\n  return (\n    <div className={styles.mainError}>\n      <h1>{error.code}</h1>\n      <h2>{error.errorMsg}</h2>\n    </div>\n  )\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"#61DAFB\"\n}, React.createElement(\"path\", {\n  d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n}), React.createElement(\"circle\", {\n  cx: 420.9,\n  cy: 296.5,\n  r: 45.7\n}), React.createElement(\"path\", {\n  d: \"M520.5 78.1z\"\n}));\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styles from './navigation.module.scss'\nimport { ReactComponent as Logo } from '../../static/logo.svg';\n\nconst Navigation = ({ config }) => {\n\n  return (\n    <div className={styles.nav}>\n      <Logo />\n    </div>\n  )\n}\n\nexport default Navigation;","import React, { useState, useEffect } from 'react';\n\nconst SpriteAnimator = ({ sprite, fps, size, frameSize, nFrames, spacer, className, controller }) => {\n  const [spriteLine, setSpriteLine] = useState(1);\n  const [currentFrame, setCurrentFrame] = useState(0);\n  const frameDelay = Math.floor(1000 / fps);\n\n  const timeouts = [];\n\n  useEffect(() => {\n    const updateFrame = () => {\n      const t = setTimeout(() => {\n        const nextFrame = currentFrame + 1 < nFrames ? currentFrame + 1 : 0;\n        setCurrentFrame(nextFrame);\n      }, frameDelay);\n      timeouts.push(t);\n    }\n    if (controller && !controller.stopped) {\n      setSpriteLine(1);\n      window.requestAnimationFrame(updateFrame);\n    } else {\n      setSpriteLine(0);\n      setCurrentFrame(0);\n    }\n  }, [currentFrame, nFrames, timeouts, frameDelay, controller])\n\n  const renderAnimationFrame = () => {\n\n    const framePosX = currentFrame * frameSize.w + ((currentFrame + 1) * spacer);\n    const framePosY = spriteLine * frameSize.h + (spriteLine + 1) * spacer;\n\n    const flip = controller && !controller.sopped && controller.fw ? -1 : 1;\n    const spriteStyles = {\n      opacity: 1,\n      zIndex: 5,\n      width: `${frameSize.w}px`,\n      height: `${frameSize.h}px`,\n      backgroundImage: `url(${sprite})`,\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: `${size.w}px ${size.h}px`,\n      backgroundPosition: `${-framePosX}px ${-framePosY}px`,\n      transform: `scaleX(${flip})`\n    };\n\n    return <div style={spriteStyles} className={className} />;\n  };\n\n  return renderAnimationFrame();\n}\n\nSpriteAnimator.defaultProps = {\n  fps: 9,\n  spacer: 4,\n  frameSize: { h: 162, w: 125 },\n  size: { h: 500, w: 520 },\n  nFrames: 4,\n  className: 'spriteAnimator'\n}\n\nexport default SpriteAnimator;","import React, { useRef, useEffect, useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Navigation from '../navigation';\nimport FitBox from 'react-fitbox';\nimport SpriteAnimator from '../spriteAnimator';\nimport rick from '../../static/rick-sprite.png'\nimport morty from '../../static/morty-sprite.png'\nimport './demo.scss';\n\nconst SinglePageApp = ({ config }) => {\n  const [moving, setMoving] = useState('Fw');\n  const height = useSelector(state => state.deviceInfoReducer.height);\n  const width = useSelector(state => state.deviceInfoReducer.width);\n\n  const containerRef = useRef();\n\n  useEffect(() => {\n    const handleClickEvent = (e) => {\n      if (!e.defaultPrevented) {\n        const dir = e.clientX >= width / 2 ? 'Fw' : 'Bw';\n        setMoving(dir);\n      }\n    }\n    document.addEventListener('click', handleClickEvent);\n    return (() => {\n      document.removeEventListener('click', handleClickEvent);\n    })\n  })\n\n  const stopMoving = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setMoving(false);\n  }\n\n  const controller = () => {\n    return {\n      stopped: moving === false,\n      fw: moving === 'Fw',\n      bw: moving === 'Bw'\n    };\n  }\n\n  const fetchRoadClass = () => {\n    let base = 'road';\n    let baseMove = 'move'\n    let result = moving === false ? base : `${base} ${baseMove}${moving}`\n    return result;\n  }\n\n  return (\n    <div className=\"spa\" style={{ height: `${height}px`, width: `${width}px` }}>\n      <Navigation config={config} />\n      <div ref={containerRef} className=\"container\">\n        <FitBox ratio={.5} size={{ h: 360, w: 500 }} fitWidth container={containerRef} >\n          <span className=\"text\">&lt;FitBox/&gt;</span>\n          <SpriteAnimator sprite={rick} className=\"rick\" controller={controller()} />\n          <SpriteAnimator sprite={morty} className=\"morty\" controller={controller()} />\n          <div className={fetchRoadClass()} onClick={stopMoving}>\n            <div className=\"shadow\"></div>\n          </div>\n        </FitBox>\n      </div>\n    </div>\n  )\n};\nexport default SinglePageApp;","import React from 'react';\nimport { Route, Switch, Redirect, BrowserRouter as Router, } from 'react-router-dom';\nimport { ErrorScreen } from '../elements/notifications';\nimport SinglePageApp from '../elements/SinglePageApp';\nimport { NOT_FOUND_404 } from '../constants';\n\nconst Routes = ({ config }) => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" render={() => <SinglePageApp config={config} />} />\n        {/* <Route path={ \"/url\" + \":uid/:token\"} render={() => (<></>)} /> */}\n        <Route path={NOT_FOUND_404} component={() => (<ErrorScreen error={{ code: 404, errorMsg: 'Page not found.' }} />)} />\n        <Redirect to={NOT_FOUND_404} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Routes;","export const getConfigFile = () => {\n  let file = '/config.json'\n  if (process.env.NODE_ENV === 'development') {\n    file = '/config.dev.json';\n  }\n  return process.env.PUBLIC_URL + file;\n}\n\nexport const NOT_FOUND_404 = \"/404/\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport * as GlobalActions from './actions';\nimport { debounce } from './utils';\nimport { ErrorScreen } from './elements/notifications';\nimport Routes from './routes';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.updateScreenSize = debounce(this.updateScreenSize.bind(this), 25);\n  }\n\n  componentDidMount() {\n    const { initApp } = this.props;\n    initApp();\n    this.updateScreenSize();\n    // Attach listeners\n    window.addEventListener('resize', this.updateScreenSize, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateScreenSize, false);\n  }\n\n  updateScreenSize() {\n    const { height, width, updateDeviceInfo } = this.props;\n    let newState = { updated: false };\n\n    const newHeight = window.innerHeight;\n    const newWidth = window.innerWidth;\n\n    if (newWidth !== width || newHeight !== height) {\n      newState['height'] = newHeight;\n      newState['width'] = newWidth;\n      newState['updated'] = true;\n    }\n\n    if (newState.updated) {\n      delete newState.updated;\n      updateDeviceInfo(newState);\n    }\n  }\n\n  render() {\n    const { config, mainError } = this.props;\n    let appRender;\n\n    if (mainError.code) {\n      appRender = (<ErrorScreen error={mainError} />);\n    } else {\n      if (!config) {\n        appRender = <div>Loading...</div>\n      } else {\n        appRender = Routes({ config });\n      }\n    }\n    return <div className=\"App\">{appRender}</div>;\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isConfigReady, mainError, config } = state.systemReducer;\n  return {\n    isConfigReady,\n    config,\n    mainError\n  }\n}\nconst mapDispatchToProps = (dispatch, ownProps, state) => {\n  return {\n    // This is the first method to be executed, if it fails it displays an error.\n    initApp: function (configFile) {\n      const config = { data: 'ok' };\n      dispatch({ type: GlobalActions.SYSTEM_CONFIG_LOADED, payload: { config } });\n    },\n\n    updateDeviceInfo: (info) => {\n      dispatch({ type: GlobalActions.UPDATE_DEVICE_INFO, payload: info });\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","async function loadFile(path) {\n  let error = false;\n  let response;\n\n  try {\n    response = await fetch(path);\n  } catch (e) {\n    console.log(e);\n    error = true;\n  }\n  const data = await response.json().catch(() => {\n    console.log(path, ' content is not valid JSON.');\n    error = true;\n  });\n  const result = error === false ? data : null;\n  return result;\n}\n\nfunction debounce(fn, interval, { leading } = {}) {\n  let timeout;\n  let leadExecuted = false;\n  const timer = typeof interval === 'number' ? interval : 200;\n  const lead = typeof leading === 'boolean' ? leading : false;\n  return (...args) => {\n    const context = this;\n    const postponed = () => {\n      timeout = null;\n      if (lead) {\n        leadExecuted = false;\n      } else {\n        fn.apply(context, args);\n      }\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(postponed, timer);\n    if (lead && !leadExecuted) {\n      leadExecuted = true;\n      fn.apply(context, args);\n    }\n  };\n}\n\nfunction timeChecker() {\n  let lastProgress = 0;\n  let valid = true;\n  return {\n    log: (progress) => {\n      if (Math.floor(progress) === 0 && valid === false) {\n        valid = true;\n        lastProgress = progress;\n      }\n      if (progress - lastProgress < 2) {\n        lastProgress = progress;\n      } else {\n        valid = false;\n      }\n    },\n    watched: () => {\n      let result = false;\n      if (valid) {\n        result = lastProgress;\n      }\n      return result;\n    }\n  }\n}\n\nexport { loadFile, debounce, timeChecker };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore'\n\n\nconst store = configureStore();\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , rootElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  let result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd()\n  return result\n}\nexport default logger","// App Global Reducers\nimport { combineReducers } from 'redux';\nimport * as GlobalActions from '../actions';\n\nconst systemInitState = {\n  isConfigReady: false,\n  mainError: {\n    code: null,\n    errorMsg: null\n  },\n  config: null\n}\n\nfunction systemReducer(state = systemInitState, action) {\n  switch (action.type) {\n    case GlobalActions.SYSTEM_CONFIG_LOADED:\n      return {\n        ...state,\n        isConfigReady: true,\n        config: action.payload.config,\n      }\n    case GlobalActions.SYSTEM_CONFIG_FAILED:\n      return {\n        ...state,\n        isConfigReady: true,\n        mainError: {\n          code: 400,\n          errorMsg: \"Configuration Error\"\n        }\n      }\n    case GlobalActions.SYSTEM_ERROR:\n      return {\n        ...state,\n        mainError: action.payload,\n      }\n    case GlobalActions.RESET_SYSTEM_ERROR:\n      return {\n        ...state,\n        mainError: {\n          code: null,\n          errorMsg: null\n        }\n      }\n    default:\n      return {\n        ...state,\n      }\n\n  }\n}\n\nconst deviceInfoInitState = {\n  height: null,\n  width: null,\n  landscape: false,\n}\n\nfunction deviceInfoReducer(state = deviceInfoInitState, action) {\n  switch (action.type) {\n    case GlobalActions.UPDATE_DEVICE_INFO:\n      return {\n        ...state,\n        height: action.payload.height,\n        width: action.payload.width,\n        landscape: (action.payload.width > action.payload.height) ? true : false,\n      }\n    default:\n      return {\n        ...state,\n      }\n  }\n}\n\nconst rootReducer = combineReducers({\n  systemReducer,\n  deviceInfoReducer\n})\n\nexport default rootReducer","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport loggerMiddleware from '../middleware/logger'\nimport rootReducer from '../reducers'\nexport default function configureStore(preloadedState) {\n  const middlewares = [loggerMiddleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = compose(...enhancers)\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n  return store\n}","\nexport const SYSTEM_CONFIG_LOADED = 'SYSTEM_CONFIG_LOADED';\nexport const SYSTEM_CONFIG_FAILED = 'SYSTEM_CONFIG_FAILED';\nexport const SYSTEM_ERROR = 'SYSTEM_ERROR';\nexport const RESET_SYSTEM_ERROR = 'RESET_SYSTEM_ERROR';\nexport const UPDATE_DEVICE_INFO = 'UPDATE_DEVICE_INFO';\n\nexport const systemErrorManager = (code, errorMsg) => (dispatch, getState) => {\n  dispatch({ type: SYSTEM_ERROR, payload: { code, errorMsg } });\n}"],"sourceRoot":""}